import cv2
import numpy as np
import matplotlib.pyplot as plt

'''
在OpenCV中，Kmeans()函数原型如下所示：
retval, bestLabels, centers = kmeans(data, K, bestLabels, criteria, attempts, flags[, centers])
    data表示聚类数据，最好是np.flloat32类型的N维点集
    K表示聚类类簇数
    bestLabels表示输出的整数数组，用于存储每个样本的聚类标签索引
    criteria表示迭代停止的模式选择，这是一个含有三个元素的元组型数。格式为（type, max_iter, epsilon）
        其中，type有如下模式：
         —–cv2.TERM_CRITERIA_EPS :精确度（误差）满足epsilon停止。
         —-cv2.TERM_CRITERIA_MAX_ITER：迭代次数超过max_iter停止。
         —-cv2.TERM_CRITERIA_EPS+cv2.TERM_CRITERIA_MAX_ITER，两者合体，任意一个满足结束。
    attempts表示重复试验kmeans算法的次数，算法返回产生的最佳结果的标签
    flags表示初始中心的选择，两种方法是cv2.KMEANS_PP_CENTERS ;和cv2.KMEANS_RANDOM_CENTERS
    centers表示集群中心的输出矩阵，每个集群中心为一行数据
'''

img = cv2.imread('lenna.png')

data = img.reshape((-1, 3))
data = np.float32(data)
# print(img.shape)
# print(data.shape)

criteria = (cv2.TERM_CRITERIA_MAX_ITER + cv2.TERM_CRITERIA_EPS, 10, 1.0)
flags = cv2.KMEANS_RANDOM_CENTERS

retval, bestLabels2, centers2 = cv2.kmeans(data, 2, None, criteria, 5, flags)
retval, bestLabels4, centers4 = cv2.kmeans(data, 4, None, criteria, 5, flags)
retval, bestLabels16, centers16 = cv2.kmeans(data, 16, None, criteria, 5, flags)
retval, bestLabels32, centers32 = cv2.kmeans(data, 32, None, criteria, 5, flags)
retval, bestLabels64, centers64 = cv2.kmeans(data, 64, None, criteria, 5, flags)

# print(centers2)
# print(centers4)
# print(centers16)
# print(centers32)
# print(centers64)


centers2 = np.uint8(centers2)
res = centers2[bestLabels2.flatten()]
dst2 = res.reshape((img.shape))

centers4 = np.uint8(centers4)
res = centers4[bestLabels4.flatten()]
dst4 = res.reshape((img.shape))

centers16 = np.uint8(centers16)
res = centers16[bestLabels16.flatten()]
dst16 = res.reshape((img.shape))

centers32 = np.uint8(centers32)
res = centers32[bestLabels32.flatten()]
dst32 = res.reshape((img.shape))

centers64 = np.uint8(centers64)
res = centers64[bestLabels64.flatten()]
dst64 = res.reshape((img.shape))

img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
dst2 = cv2.cvtColor(dst2, cv2.COLOR_RGB2BGR)
dst4 = cv2.cvtColor(dst4, cv2.COLOR_RGB2BGR)
dst16 = cv2.cvtColor(dst16, cv2.COLOR_RGB2BGR)
dst32 = cv2.cvtColor(dst32, cv2.COLOR_RGB2BGR)
dst64 = cv2.cvtColor(dst64, cv2.COLOR_RGB2BGR)

# 用来正常显示中文标签
plt.rcParams['font.sans-serif'] = ['SimHei']

# 显示图像
titles = ['原始图像', '聚类图像 K=2', '聚类图像 K=4',
          '聚类图像 K=16', '聚类图像 K=32', '聚类图像 K=64']
images = [img, dst2, dst4, dst16, dst32, dst64]
for i in range(6):
    plt.subplot(2, 3, i + 1), plt.imshow(images[i], 'gray'),
    plt.title(titles[i])
    plt.xticks([]), plt.yticks([])
plt.show()
