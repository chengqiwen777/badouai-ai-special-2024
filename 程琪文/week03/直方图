import cv2
import numpy as np
from matplotlib import pyplot as plt


'''
calcHist—计算图像直方图
函数原型：calcHist(images, channels, mask, histSize, ranges, hist=None, accumulate=None)
images：图像矩阵，例如：[image]
channels：通道数，例如：0
mask：掩膜，一般为：None
histSize：直方图大小，一般等于灰度级数
ranges：横轴范围
'''

img = cv2.imread('lenna.png')
print(img)

gray_img = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)

# 方法一
# plt.figure()
# plt.hist(gray_img.ravel(), bins=256)
# plt.show()

# 方法2
# hist = cv2.calcHist([gray_img], [0], None, [256], [0, 256])
# plt.figure()
# plt.title("Grayscale Histogram")
# plt.xlabel('Bins') #X轴标签
# plt.ylabel('# of Pixels') # Y轴标签
# plt.plot(hist)
# plt.xlim([0, 256])#设置x坐标轴范围
# plt.show()

#彩色图像直方图
channels = cv2.split(img)
print(channels)

colors = ('b', 'g', 'r')
plt.figure()
plt.title('Flattened Color Histogram')
plt.xlabel('Bins')
plt.ylabel('# of Pixels')

for (channel, color) in zip(channels, colors):
    hist = cv2.calcHist(channel, [0], None, [256], [0, 256])
    plt.plot(hist, color)
    plt.xlim([0, 256])
plt.show()


