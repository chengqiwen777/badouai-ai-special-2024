import numpy as np

class PCA:
    def __init__(self, n_components):
        self.n_components = n_components

    def func(self, X):
        self.n_features = X.shape[1]

        X = X - X.mean(axis=0)
        self.covariance = np.dot(X.T, X) / X.shape[0]
        eig_vals, eig_vecs = np.linalg.eig(self.covariance)
        idx = np.argsort(-eig_vals)

        self.components = eig_vecs[:, idx[:self.n_components]]
        return np.dot(X, self.components)


if __name__ == '__main__':
    pca = PCA(n_components=2)
    X = np.array(
        [[-1, 2, 66, -1], [-2, 6, 58, -1], [-3, 8, 45, -2], [1, 9, 36, 1], [2, 10, 62, 1], [3, 5, 83, 2]])  # 导入数据，维度为4
    newX = pca.func(X)
    print(newX)
